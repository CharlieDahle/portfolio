services:
  frontend:
    build: ./messaging-app
    ports:
      - "3000:3000"
    volumes:
      - ./messaging-app:/app
    # depends_on:
    #   - backend

#   backend:
#     build: ./messaging-backend
#     ports:
#       - "5001:5000"
#     volumes:
#       - ./messaging-backend:/app
#       - /app/node_modules
#     environment:
#       - NODE_ENV=development
#       - FRONTEND_URL=http://localhost:3000
#       - PORT=5000
#       - JWT_SECRET=your_jwt_secret_change_in_production
#       - MONGODB_URI=mongodb://mongo:27017/messaging-app
#       - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/messaging-app
#       - REDIS_URI=redis://redis:6379
#     depends_on:
#       - mongo
#       - postgres
#       - redis

#   mongo:
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db

#   postgres:
#     image: postgres:latest
#     ports:
#       - "5432:5432"
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=messaging-app
#     volumes:
#       - postgres-data:/var/lib/postgresql/data

#   redis:
#     image: redis:alpine
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis-data:/data

#   elasticsearch:
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
#     environment:
#       - discovery.type=single-node
#       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#     ports:
#       - "9200:9200"
#     volumes:
#       - elasticsearch-data:/usr/share/elasticsearch/data

# volumes:
#   mongo-data:
#   postgres-data:
#   redis-data:
#   elasticsearch-data:
